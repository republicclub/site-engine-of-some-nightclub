buildscript {
	ext {
		springBootVersion = '2.1.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'by.ladyka'
version = '0.6.0r'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	runtime('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-web') 
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-mail')
	runtime('mysql:mysql-connector-java')

	compile "org.apache.httpcomponents:httpclient:$httpclientVersion"
	compile group: 'com.lowagie', name: 'itext', version: '2.1.7'
	compile "net.sf.jasperreports:jasperreports:$jasperreportsVersion"
	compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
	compileOnly('org.projectlombok:lombok')
	annotationProcessor ('org.projectlombok:lombok')
	// https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf
	compile group: 'org.thymeleaf', name: 'thymeleaf'
	compile group: 'org.thymeleaf', name: 'thymeleaf-spring5'

	//TODO check this qr code in pdf !!!!
	compile group: 'com.google.zxing', name: 'core', version: '3.3.3'
	compile group: 'net.sf.barcode4j', name: 'barcode4j', version: '2.1'
	compile group: 'org.apache.xmlgraphics', name: 'batik-bridge', version: '1.10'
	//TODO END CHECK !!!

	compile group: 'net.glxn', name: 'qrgen', version: '1.4'

	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	compile "org.liquibase:liquibase-core:$liquibaseVersion"

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
	testCompile group: 'org.springframework.security', name: 'spring-security-test'
	testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
	testCompile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
	testCompile group: 'com.h2database', name: 'h2'
	testCompile group: 'com.github.database-rider', name: 'rider-core', version: '1.5.2'
	testCompile (group: 'com.github.database-rider', name: 'rider-spring', version: '1.5.2'){
		exclude group: 'org.slf4j', module: 'slf4j-simple'
	}
	testCompile group: 'org.dbunit', name: 'dbunit', version: '2.6.0'


}




sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integration-test/java')
		}
		resources.srcDir file('src/integration-test/resources')
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
	description = 'Runs the integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	mustRunAfter test
	outputs.upToDateWhen { false }
}

check.dependsOn integrationTest

test {
	systemProperty "spring.profiles.active", "test"
}

integrationTest {
	systemProperty "spring.profiles.active", "integration-test"
}